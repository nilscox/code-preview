name: Create release

on:
  push:
    tags:
      - 'v*'

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  type-check:
    name: Type check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup

      - name: Build packages
        run: pnpm build

      - name: Run type checking
        run: pnpm -r exec tsc --noEmit

  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
      - run: pnpm test

  create-release:
    name: Create release
    runs-on: ubuntu-latest
    needs: [type-check, tests]
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      - uses: ncipollo/release-action@v1
        with:
          allowUpdates: true

  publish-packages:
    name: Build and publish packages
    runs-on: ubuntu-latest
    needs: [type-check, tests]
    # permissions:
    #   contents: read
    #   packages: write
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup

      - name: Build packages
        run: pnpm build

      - name: Seed version
        run: |
          set -eo pipefail

          version=$(echo ${{ github.ref }} | sed -nE 's;.*v([0-9]+\.[0-9]+\.[0-9]+)$;\1;p')
          echo "VERSION=$version" >> "$GITHUB_ENV"

      - name: Publish packages
        run: |
          set -eo pipefail

          for pkg in packages/*; do
            if [[ "$pkg" == */demo ]]; then
              continue;
            fi

            sed "s/0.0.0/$VERSION/" "$pkg/package.json"
            pnpm publish --no-git-checks --filter $(basename "$pkg")
          done

        # env:
        #   NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
